<div id="rf">
    <div id="ribbon"></div>
</div>
<div id="tableFeild" ></div>

<script type="text/javascript" language="javascript">
	var InitObj = function(){
		this.csrf_tokens 		= '';
		this.kycUpload 			= false;
		this.selectedGridIds 	= null;
		this.selectedGrid   	= null;
		this.ribbonPreviousId 	= null;
		this.ribbonSelectId 	= null; // it holds current selected id of ribbon select button
        this.searchQuery 		= '';
		this.ribbonJson 		= '<%= json %>';
	};
	
	InitObj.prototype= new Ucr_dhx();
	
	InitObj.prototype.dhx_win = function(obj){
		this.create_dhx_window({
			winId				: obj.id, 
			height				: obj.height,
			width				: obj.width,
			headerText			: obj.header,
			modal				: (obj.modal===undefined)?true : obj.modal,
			clear_load			: obj.clear_l || null,
			load_file			: obj.file_l || null,
			win_num				: obj.win_nums || 'single',
			gridId				: obj.gridId || null ,
			multiple			: obj.multiple || 'single',
			attachUrl			: obj.attachUrl || null
		});	
		
	}
	InitObj.prototype.userTable = function (id){
		var type  = (this.ribb['ribbon'].getValue('userco')==2)?'suspend':'active';
		
		this.create_dhx_grid({
			p_id				: id,
			setHeader			: "Name,Phone,Email,Date Created,Last Login",							
			setInitWidths		: "350,200,150,150,148",
			setColAlign			: "left,left,left,left,left",
			setColTypes			: 'txt,txt,txt,txt,txt',
			setColumnIds		: '"name,ph,eml,date,ldate"', 
			enableEditEvents	: 'true,false,true',
			multi_select		: true,
			xml_link			: '../user/'+type
		 });
	}
	InitObj.prototype.uploadTable = function (id){
		this.create_dhx_grid({
			p_id				: id,
			setHeader			: "Upload By, File , Description,Date",							
			setInitWidths		: "350,200,300,148",
			setColAlign			: "left,left,left,left",
			setColTypes			: 'txt,txt,txt,txt',
			setColumnIds		: '"up,fl,des,dt"', 
			enableEditEvents	: 'true,false,true',
			multi_select		: true,
			// xml_link			: 'loan/renderPenalty'
		});
	}
	
	InitObj.prototype.ribbonEvevnt = function(id){
		this.searchQuery ='';
		this.destroy_dhx_object('window');
		if(id=='userlist'){ 
			this.userTable('tableFeild');
		}
		else if(id=='uploadlist'){
			this.uploadTable('tableFeild');
		}
		this.ribbonPreviousId = id;
	}
	InitObj.prototype.selectedGridId = function(type,grid){
		this.selectedGrid = grid || 'tableFeild_t';
		var type = type || 'single';
		
		var id = this.grid[this.selectedGrid].getSelectedRowId();
		if(id == null ){
			this.message_show("There is no row selected form table",'error');
			return null;
		}
		id = id.split(',');
		if(type == 'single'){
			if(id.length == 1 ) return id[0];
			else{
				this.message_show("You can't select multiple row for this action ",'error');
				return null;
			}
		}
		return id;
	}
	
	/*
	 object initilization 
	*/
	obj = new InitObj();
	
    var tabIds = [];
   
	obj.create_dhx_ribbon({
		parent:	'ribbon',
		icon_p:	 './resources/images',
		tabs: 	JSON.parse((obj.ribbonJson).replace(/&#34;/g,'"'))
	});
	obj.ribb['ribbon']._tabbar.forEachTab(function(tab){ // geting all ribbon tab ids
		var id = tab.getId();
		tabIds.push(id);
	});
	obj.ribb['ribbon']._tabbar.tabs(tabIds[0]).setActive(); // setting first tab as active
	obj.userTable('tableFeild');
	obj.ribbonPreviousId='userlist';
	console.log(obj.ribb['ribbon'])
	obj.ribb['ribbon'].attachEvent("onClick", function(itemId, bId){

		if(itemId==='approve'){
			obj.selectedGridIds = obj.selectedGridId();
			if(obj.selectedGridIds!= null){
				dhtmlx.confirm('Are you sure?',
					function(result){
						if(result){
							obj.dhx_ajax({
								url:`/user/${obj.selectedGridIds}/state/activate`,
								type:"put",
								cb:(err,data)=>{
									if(err){
										obj.message_show('Fail','error');
									}else{
										if(JSON.parse(data).status=='sucess'){
											obj.message_show('Sucess');
											obj.grid['tableFeild_t'].deleteRow(obj.selectedGridIds);
										}else{
											obj.message_show('Fail','error');
										}
										
									}
								}
							});
						}
						
					}
				);
				
			}
		}
		else if(itemId ==='disapprove'){
			obj.selectedGridIds = obj.selectedGridId();
			if(obj.selectedGridIds!= null){
				dhtmlx.confirm('Are you sure?',(result)=>{
					if(result){
						obj.dhx_ajax({
							url:`/user/${obj.selectedGridIds}/state/suspend`,
							type:"put",
							cb:(err,data)=>{
								if(err){
									obj.message_show('Fail','error');
								}else{
									if(JSON.parse(data).status=='sucess'){
										obj.message_show('Sucess');
										obj.grid['tableFeild_t'].deleteRow(obj.selectedGridIds);
									}else{
										obj.message_show('Fail','error');
									}
									
								}
							}
						});
					}
				});
			}
		}        
        else{
            obj.ribbonEvevnt(itemId);
        }
        
    });
    // ribbon combo box event
    obj.ribb['ribbon'].attachEvent('onSelectOption',function( id,ind,text){
        if(id == 'userco'){
            if(obj.ribbonPreviousId!='userlist'){obj.message_show('**:Invalid Operation');return;}
            if( ind == 2 ){
                obj.grid['tableFeild_t'].clearAndLoad('../user/suspend' );			
            }
            else if( ind == 1 ){				
                obj.grid['tableFeild_t'].clearAndLoad('../user/active' );	
            }				
        }
        
    });
	$('#ribbon div.dhxtabbar_tabs_top> div.dhx_cell_tabbar:nth-child(2) div.dhxrb_big_button').addClass('selButton');
	$('#ribbon').on('click','div.dhxrb_big_button',function(e){
		$('#ribbon div.dhxrb_big_button').removeClass('selButton');
		$(this).addClass('selButton');
	});
	
</script>
  


